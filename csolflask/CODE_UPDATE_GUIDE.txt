============================================================
 CSOL Flask 项目代码更新与部署指南 (CODE_UPDATE_GUIDE.txt)
============================================================

本指南详细说明了如何将您在本地电脑上修改的代码，安全、可靠地更新到阿里云服务器上正在运行的网站。

核心流程:
本地修改代码 -> 推送到GitHub仓库 -> 在阿里云服务器上拉取更新 -> 重启服务生效

------------------------------------------------------------
 Part 1: 将本地代码更新到 GitHub
------------------------------------------------------------

这是整个流程的第一步。您需要先将本地的修改保存到 GitHub 远程仓库。

### 方法 A: 使用 Git 命令推送 (标准流程，推荐)

**前提**: 您的本地网络可以稳定连接到 GitHub。

**步骤 1: 打开终端**
   - 在您的本地电脑上，打开 PowerShell 或其他终端工具。
   - 使用 `cd` 命令进入您的项目文件夹: `cd D:\bt5\csolflask`

**步骤 2: 查看、添加和提交您的修改**
   - **查看修改状态**: 运行 `git status`，它会列出所有被修改或新创建的文件。
     ```
     git status
     ```
   - **添加所有修改到暂存区**: 这个命令告诉 Git，你想要包含哪些文件的改动。
     ```
     git add .
     ```
   - **提交修改**: 将暂存区的改动创建一个正式的提交记录，并附上本次更新的描述。描述信息应该清晰地说明你做了什么。
     ```
     git commit -m "这里写你的更新描述，例如：修复了xx bug 或 增加了xx功能"
     ```

**步骤 3: 推送到 GitHub**
   - 这个命令会将你刚刚的提交上传到 GitHub 远程仓库。
     ```
     git push
     ```
   - **注意**: 如果是第一次推送这个分支，Git 可能会提示你运行以下命令来建立本地与远程分支的关联，按提示操作即可：
     ```
     git push --set-upstream origin main
     ```

### 方法 B: 使用 GitHub 网站上传 (网络不佳时的备用方案)

**前提**: 当 `git push` 因网络问题失败或超时时，使用此方法。

**步骤 1: 将项目打包成 ZIP 文件**
   - 在您的本地电脑上，进入 `D:\bt5\csolflask` 文件夹。
   - **全选** 文件夹内所有的文件和子文件夹 (**除了 `.git` 文件夹**)。
   - 右键点击，选择 "发送到" -> "压缩(zipped)文件夹"，创建一个 `.zip` 压缩包。

**步骤 2: 在 GitHub 网站上传**
   - 在浏览器中，打开你的项目 GitHub 仓库页面。
   - 点击页面右上方的 `Add file` 按钮，然后选择 `Upload files`。
   - 将你刚刚创建的 `.zip` 文件拖拽到网页的上传区域。GitHub 会自动解压并识别文件变更。
   - 在页面下方的 "Commit changes"（提交更改）区域，填写本次更新的描述。
   - 点击绿色的 `Commit changes` 按钮，完成上传。


------------------------------------------------------------
 Part 2: 在阿里云服务器上更新网站代码
------------------------------------------------------------

当您确认代码已经成功更新到 GitHub 之后（无论用方法A还是方法B），就可以在服务器上进行同步了。

**步骤 1: 使用 SSH 连接到您的阿里云服务器**
   - 在 PowerShell 终端中，运行以下命令：
     ```
     ssh root@60.205.144.139
     ```
   - 系统会提示您输入服务器的 `root` 用户密码。

**步骤 2: 运行更新脚本**
   - 我们已经为您准备好了一键更新的脚本。登录服务器后，执行以下命令：
     ```bash
     # 首先，进入存放部署脚本的目录
     cd /var/www/csolflask/aliyun_deployment/

     # 然后，以管理员权限运行更新脚本
     sudo ./update_aliyun.sh
     ```

**这个脚本会自动完成以下工作**:
1.  `git pull`: 从 GitHub 拉取最新的代码。
2.  `systemctl restart csolflask`: 重启 Flask 应用服务，让新的代码生效。

**步骤 3: 验证更新**
   - 脚本运行完成后，您可以访问您的网站 http://60.205.144.139 来验证代码改动是否已成功应用。
   - 如果遇到问题，可以查看服务日志来排查：
     ```bash
     sudo journalctl -u csolflask -f
     ```

------------------------------------------------------------
 总结: 快速操作清单
------------------------------------------------------------
1.  **本地**: `git add .`
2.  **本地**: `git commit -m "更新描述"`
3.  **本地**: `git push` (如果失败，则改用网页上传)
4.  **服务器**: `ssh root@60.205.144.139`
5.  **服务器**: `cd /var/www/csolflask/aliyun_deployment/`
6.  **服务器**: `sudo ./update_aliyun.sh`
7.  **浏览器**: 访问网站验证。 
123123